# Figure 1 in appendix
Figure_A1 <- ggplot(data=c_m2,aes(as.numeric(as.character(Year)),as.numeric(as.character(value))))+
geom_line(data=c_m2[c_m2$Source%in%c("A","B"),],aes(color=variable,linetype=as.factor(Source)),size=1)+
theme_bw()+ theme(legend.position = "bottom")+
ylab(c("Cumulative incidence of TB"))+xlab(c("Years since infection"))+
scale_colour_manual(name="",values=cbPalette)+
scale_linetype_manual(values = c("dashed","solid"),name="")+
scale_y_continuous(limits=c(0,0.15),expand=c(0,0))+
scale_x_continuous(limits=c(0,20),expand=c(0,0))+
theme(plot.margin = unit(c(1,1,1,1), "cm"))+
guides(col = guide_legend(nrow = 1))+
guides(linetype = guide_legend(nrow = 1))
Figure_A1
dim(Cum_out_S2)
source("Cumulative_incidence_analysis.R")
Figure_A1
# This code is used to produce the results in "Sumner and White, Modelling the impact of tuberculosis preventive therapy: the importance of model structure"
# It compares the use of different structures for the progression from latecy to disease and the impact on the predicted effect of a simple preventive therapy intervention
# Set the working directory
setwd("~/GitHub/Latency_Model_Comparison_Public")
# load libraries
require(deSolve)
require(ggplot2)
require(reshape2)
require(stats)
library(FME)
# load the different models
# these calculate the cumulative TB incidence (ignoring death and re-infection)
source("Model_1_cum.R")
source("Model_2_cum.R")
source("Model_3_cum.R")
# these are the transmission models
source("Model_1.R")
source("Model_2.R")
source("Model_3.R")
# Set up accessible palette for plotting
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
##############################################################################################################################################
# This script implements the analysis of the cumulaitve TB risk reported in the appendix
source("Cumulative_incidence_analysis.R")
##############################################################################################################################################
# This script implements the analysis of the steady state incidence and intervention affects reported in the main text
source("Intervention_analysis.R")
##############################################################################################################################################
# This script implements the analysis of the duration of the fast latent state for model 1 reported in the appendix
source("Duration_analysis.R")
Figure_A1
Figure_1
Figure_2
# MODEL_3_REPARAMETERISE.R
# This script reparameterises model 3 to give same cumulative incidence as models 1 and 2
# It compares the predictions across models
############################################################################################################
# Calculate new parameters for model 3 to give same lifetime risk as models 1 and 2
# Set c to the values from model 1 and find value of a
# Appendix equation A47
# Add these parameters to the others and run all 4 models
ar_2 <- rbind(ar,(L_S[1,]-(cr_S[1,]/(cr_S[1,]+u)))/(1-(cr_S[1,]/(cr_S[1,]+u))))
br_2 <- rbind(br,c(0,0))
cr_2 <- rbind(cr,c(0.000594,365*5.5e-6))
kr_2 <- rbind(kr,c(0,0))
er_2 <- rbind(er,c(0,0))
############################################################################################################
# LOOK AT THE CUMULATIVE INCIDENCE
pars <- c()   # no parameter to pass
t_max <- 7300 # this is 20 years in days
# Array to hold outputs
Cum_out_S2 <- array(NA,dim=c(t_max+1,dim(er_2)[1],dim(er_2)[2]))
for (ii in 1:dim(er_2)[1]){         # For each model
for (zz in 1:dim(er_2)[2]){       # For each parameterisation
# Pick the right parameters
a <- ar_2[ii,zz]
b <- br_2[ii,zz]
c <- cr_2[ii,zz]
k <- kr_2[ii,zz]
e <- er_2[ii,zz]
# define the initial conditions
state_cum_S2 <- list(c(LA=1,LB=0,I=0),                       # Model 1 - all in early latent state
c(LA=br_2[2,zz],LB=1-br_2[2,zz],I=0),  # Model 2 - split between early and late latent states
c(L=1-ar_2[3,zz],I=ar_2[3,zz]),        # Model 3 - split between latent and disease
c(L=1-ar_2[4,zz],I=ar_2[4,zz]))        # Model 3 - new parameters
state <- unlist(state_cum_S2[ii])
# Run the model
if (ii==1) temp <- as.data.frame(Cum_1(pars,state))
if (ii==2) temp <- as.data.frame(Cum_2(pars,state))
if (ii==3) temp <- as.data.frame(Cum_3(pars,state))
if (ii==4) temp <- as.data.frame(Cum_3(pars,state))
# Store the outputs
Cum_out_S2[,ii,zz] <- temp$I
}
}
# Plot results for both parameterisations
Cum_inc2 <- as.data.frame(rbind(cbind(Cum_out_S2[,,1],seq(0,t_max),"A"),
cbind(Cum_out_S2[,,2],seq(0,t_max/365,by=1/365),"B"))) # This converts daily to annual
colnames(Cum_inc2) <- c("1","2","3","3 (new parameters)","Year","Source")
c_m2 <- melt(Cum_inc2,id.vars=c("Year","Source"))
# Figure 1 in appendix
Figure_A4 <- ggplot(data=c_m2,aes(as.numeric(as.character(Year)),as.numeric(as.character(value))))+
geom_line(data=c_m2[c_m2$Source%in%c("A","B"),],aes(color=variable,linetype=as.factor(Source)),size=1)+
theme_bw()+ theme(legend.position = "bottom")+
ylab(c("Cumulative incidence of TB"))+xlab(c("Years since infection"))+
scale_colour_manual(name="",values=cbPalette)+
scale_linetype_manual(values = c("dashed","solid"),name="")+
scale_y_continuous(limits=c(0,0.15),expand=c(0,0))+
scale_x_continuous(limits=c(0,20),expand=c(0,0))+
theme(plot.margin = unit(c(1,1,1,1), "cm"))+
guides(col = guide_legend(nrow = 1))+
guides(linetype = guide_legend(nrow = 1))
Figure_A4
# MODEL_3_REPARAMETERISE.R
# This script reparameterises model 3 to give same cumulative incidence as models 1 and 2
# It compares the predictions across models
############################################################################################################
# Calculate new parameters for model 3 to give same lifetime risk as models 1 and 2
# Set c to the values from model 1 and find value of a
# Appendix equation A47
# Add these parameters to the others and run all 4 models
ar_2 <- rbind(ar,(L_S[1,]-(cr_S[1,]/(cr_S[1,]+u)))/(1-(cr_S[1,]/(cr_S[1,]+u))))
br_2 <- rbind(br,c(0,0))
cr_2 <- rbind(cr,c(0.000594,5.5e-6))
kr_2 <- rbind(kr,c(0,0))
er_2 <- rbind(er,c(0,0))
############################################################################################################
# LOOK AT THE CUMULATIVE INCIDENCE
pars <- c()   # no parameter to pass
t_max <- 7300 # this is 20 years in days
# Array to hold outputs
Cum_out_S2 <- array(NA,dim=c(t_max+1,dim(er_2)[1],dim(er_2)[2]))
for (ii in 1:dim(er_2)[1]){         # For each model
for (zz in 1:dim(er_2)[2]){       # For each parameterisation
# Pick the right parameters
a <- ar_2[ii,zz]
b <- br_2[ii,zz]
c <- cr_2[ii,zz]
k <- kr_2[ii,zz]
e <- er_2[ii,zz]
# define the initial conditions
state_cum_S2 <- list(c(LA=1,LB=0,I=0),                       # Model 1 - all in early latent state
c(LA=br_2[2,zz],LB=1-br_2[2,zz],I=0),  # Model 2 - split between early and late latent states
c(L=1-ar_2[3,zz],I=ar_2[3,zz]),        # Model 3 - split between latent and disease
c(L=1-ar_2[4,zz],I=ar_2[4,zz]))        # Model 3 - new parameters
state <- unlist(state_cum_S2[ii])
# Run the model
if (ii==1) temp <- as.data.frame(Cum_1(pars,state))
if (ii==2) temp <- as.data.frame(Cum_2(pars,state))
if (ii==3) temp <- as.data.frame(Cum_3(pars,state))
if (ii==4) temp <- as.data.frame(Cum_3(pars,state))
# Store the outputs
Cum_out_S2[,ii,zz] <- temp$I
}
}
# Plot results for both parameterisations
Cum_inc2 <- as.data.frame(rbind(cbind(Cum_out_S2[,,1],seq(0,t_max),"A"),
cbind(Cum_out_S2[,,2],seq(0,t_max/365,by=1/365),"B"))) # This converts daily to annual
colnames(Cum_inc2) <- c("1","2","3","3 (new parameters)","Year","Source")
c_m2 <- melt(Cum_inc2,id.vars=c("Year","Source"))
# Figure 1 in appendix
Figure_A4 <- ggplot(data=c_m2,aes(as.numeric(as.character(Year)),as.numeric(as.character(value))))+
geom_line(data=c_m2[c_m2$Source%in%c("A","B"),],aes(color=variable,linetype=as.factor(Source)),size=1)+
theme_bw()+ theme(legend.position = "bottom")+
ylab(c("Cumulative incidence of TB"))+xlab(c("Years since infection"))+
scale_colour_manual(name="",values=cbPalette)+
scale_linetype_manual(values = c("dashed","solid"),name="")+
scale_y_continuous(limits=c(0,0.15),expand=c(0,0))+
scale_x_continuous(limits=c(0,20),expand=c(0,0))+
theme(plot.margin = unit(c(1,1,1,1), "cm"))+
guides(col = guide_legend(nrow = 1))+
guides(linetype = guide_legend(nrow = 1))
Figure_A4
# Create parameter vectors again, Ragonnet values no scaled by 365 to be annual
ar_S2 <- rbind(ar_S,(L_S[1,]-(cr_S[1,]/(cr_S[1,]+u)))/(1-(cr_S[1,]/(cr_S[1,]+u))))
br_S2 <- rbind(br_S,c(0,0))
cr_S2 <- rbind(cr_S,c(0.000594,365*5.5e-6))
kr_S2 <- rbind(kr_S,c(0,0))
er_S2 <- rbind(er_S,c(0,0))
# Start from steady state and look after 10 years of PT
# Array to store required outputs
outputs_newS <- mat.or.vec(length(beta_r)*dim(er_S2)[1]*dim(er_S2)[2]*length(qr_S)*length(w_r),15)
kk<-0
reinfection_list <- c("Yes","No")
source_list <- c("A","B")
model_list <- c("1","2","3","3 (new parameters)")
PT_protection_list <- c("100% protection","60% protection","25% protection")
start_time <- Sys.time()
for (pp in 1:dim(er_S2)[2]){
for (ii in 1:dim(er_S2)[1]){
for (zz in 1:length(qr_S)){
for (bb in 1:length(beta_r)){
for (ww in 1:length(w_r)){
kk <- kk+1
beta <- beta_r[bb]
a <- ar_S2[ii,pp]
b <- br_S2[ii,pp]
c <- cr_S2[ii,pp]
k <- kr_S2[ii,pp]
e <- er_S2[ii,pp]
q <- qr_S[zz]
w <- w_r[ww]
# Assume 5% coverage of PT
pars <- list(cov_PT=PT_cov)
if (ii==1) {
source("SS_1.R")
state <- c(S=S,LA=LA,LB=LB,I=I,PA=0,PB=0,N_PT=0)
Rag_out <- as.data.frame(TB_model_1(pars,state))
}
if (ii==2){
source("SS_2.R")
state <- c(S=S,LA=LA,LB=LB,I=I,PA=0,PB=0,N_PT=0)
Rag_out <- as.data.frame(TB_model_2(pars,state))
}
if (ii==3){
source("SS_3.R")
state <- c(S=S,L=L,I=I,P=0,N_PT=0)
Rag_out <- as.data.frame(TB_model_3(pars,state))
}
# Rerun model 3 with reparameterised values
if (ii==4){
source("SS_3.R")
state <- c(S=S,L=L,I=I,P=0,N_PT=0)
Rag_out <- as.data.frame(TB_model_3(pars,state))
}
outputs_newS[kk,] <- c(beta,                                                          # beta
model_list[ii],                                                # model
source_list[pp],                                               # source
reinfection_list[zz],                                          # reinfection  model
PT_protection_list[ww],                                        # protection against progression due to PT
Rag_out$Total[tend],                                           # total pop at end to check is 1
100000*Rag_out$Inc[1],                                         # baseline incidence (/100,000)
100000*Rag_out$Inc[tend],                                      # final incidence (/100,000)
100*(Rag_out$Inc[1]-Rag_out$Inc[tend])/Rag_out$Inc[1],         # reduction in incidence after 10 years
Rag_out$Number_PT[tend],                                       # PT in year 10
10000*Rag_out$N_PT[tend],                                      # Cumulative PT to year 10
10000*(Rag_out$Inc[1]-Rag_out$Inc[tend]),                      # Cases averted in year 10 (assuming population of 1,000,000)
10000*sum(Rag_out$Inc[1]-Rag_out$Inc[1:tend]),                 # Cumulative cases averted to year 10 (assuming population of 1,000,000)
Rag_out$Number_PT[tend]/(Rag_out$Inc[1]-Rag_out$Inc[tend]),    # NNT in year 10
Rag_out$N_PT[tend]/sum(Rag_out$Inc[1]-Rag_out$Inc[1:tend]))    # Cumulative NNT to year 10
}
}
}
}
}
end_time <- Sys.time()
end_time - start_time
# Tidy up the outputs
outputs_newS<- as.data.frame(outputs_newS)
colnames(outputs_newS) <- c("Beta","Model","Source","Reinfection model","Protection","Total","Incidence","Final Incidence",
"% Reduction in TB incidence",
"Number given PT in year 10","Cumulative number given PT",
"Cases averted in year 10 (assuming pop of 10,000)","Cumulative cases averted",
"NNT with PT to avert one case (in year 10)","NNT with PT to avert one case")
outputs_newS$Beta = as.numeric(as.character(outputs_newS$Beta))
outputs_newS$Total = as.numeric(as.character(outputs_newS$Total))
outputs_newS$Incidence = as.numeric(as.character(outputs_newS$Incidence))
outputs_newS$`Final Incidence` = as.numeric(as.character(outputs_newS$`Final Incidence`))
outputs_newS$`% Reduction in TB incidence` = as.numeric(as.character(outputs_newS$`% Reduction in TB incidence`))
outputs_newS$`Number given PT in year 10` = as.numeric(as.character(outputs_newS$`Number given PT in year 10`))
outputs_newS$`Cumulative number given PT` = as.numeric(as.character(outputs_newS$`Cumulative number given PT`))
outputs_newS$`Cases averted in year 10 (assuming pop of 10,000)`= as.numeric(as.character(outputs_newS$`Cases averted in year 10 (assuming pop of 10,000`))
outputs_newS$`Cumulative cases averted` = as.numeric(as.character(outputs_newS$`Cumulative cases averted`))
outputs_newS$`NNT with PT to avert one case (in year 10)` = as.numeric(as.character(outputs_newS$`NNT with PT to avert one case (in year 10)`))
outputs_newS$`NNT with PT to avert one case` = as.numeric(as.character(outputs_newS$`NNT with PT to avert one case`))
#######################################################################################################################
# GENERATE PLOTS
# Plot outputs of intervention including reparameterised version of model 3
# Appendix figure A4
outputs_mS <- melt(outputs_newS[which(outputs_newS$Incidence<1200),],id.vars=c("Beta","Model","Source","Reinfection model","Incidence","Protection"))
outputs_mS$PT_f = factor(outputs_mS$Protection, levels=c('100% protection','60% protection','25% protection'))
Figure_A4 <- ggplot()+
geom_line(data=outputs_mS[outputs_mS$`Reinfection model`=="No"&
outputs_mS$`PT_f`%in%c("60% protection")&
outputs_mS$variable%in%c('% Reduction in TB incidence','NNT with PT to avert one case'),],
aes(as.numeric(as.character(Incidence)),as.numeric(as.character(value)),colour=as.factor(Model),linetype=as.factor(Source)),size=1)+
facet_wrap(~variable,scales="free_y",switch="y")+
xlab("Incidence /100,000")+
ylab("")+
scale_colour_manual(name="Model",values=cbPalette)+
scale_fill_manual(name="Model",values=cbPalette)+
scale_linetype_manual(values = c("solid","dashed"),name="Parameters")+
theme_bw()+theme(legend.position = "bottom")+
coord_cartesian(xlim = c(50, 1000))+
# scale_y_continuous(expand = c(0, 0),limits = c(0,NA))+
scale_x_continuous(expand = c(0, 0))+
theme(strip.background = element_blank(),strip.placement = "outside")+
theme(plot.margin = unit(c(1,1,1,1), "cm"))+
guides(col = guide_legend(nrow = 1))+
guides(fill = FALSE)+
guides(linetype = guide_legend(nrow = 1))+
theme(text = element_text(size=18))
Figure_A4
# GENERATE PLOTS
# Plot outputs of intervention including reparameterised version of model 3
# Appendix figure A4
outputs_mS <- melt(outputs_newS[which(outputs_newS$Incidence<1200),],id.vars=c("Beta","Model","Source","Reinfection model","Incidence","Protection"))
outputs_mS$PT_f = factor(outputs_mS$Protection, levels=c('100% protection','60% protection','25% protection'))
Figure_A4 <- ggplot()+
geom_line(data=outputs_mS[outputs_mS$`Reinfection model`=="Yes"&
outputs_mS$`PT_f`%in%c("100% protection")&
outputs_mS$variable%in%c('% Reduction in TB incidence','NNT with PT to avert one case'),],
aes(as.numeric(as.character(Incidence)),as.numeric(as.character(value)),colour=as.factor(Model),linetype=as.factor(Source)),size=1)+
facet_wrap(~variable,scales="free_y",switch="y")+
xlab("Incidence /100,000")+
ylab("")+
scale_colour_manual(name="Model",values=cbPalette)+
scale_fill_manual(name="Model",values=cbPalette)+
scale_linetype_manual(values = c("solid","dashed"),name="Parameters")+
theme_bw()+theme(legend.position = "bottom")+
coord_cartesian(xlim = c(50, 1000))+
# scale_y_continuous(expand = c(0, 0),limits = c(0,NA))+
scale_x_continuous(expand = c(0, 0))+
theme(strip.background = element_blank(),strip.placement = "outside")+
theme(plot.margin = unit(c(1,1,1,1), "cm"))+
guides(col = guide_legend(nrow = 1))+
guides(fill = FALSE)+
guides(linetype = guide_legend(nrow = 1))+
theme(text = element_text(size=18))
Figure_A4
# Appendix figure A4
outputs_mS <- melt(outputs_newS[which(outputs_newS$Incidence<1200),],id.vars=c("Beta","Model","Source","Reinfection model","Incidence","Protection"))
outputs_mS$PT_f = factor(outputs_mS$Protection, levels=c('100% protection','60% protection','25% protection'))
Figure_A4 <- ggplot()+
geom_line(data=outputs_mS[outputs_mS$`Reinfection model`=="Yes"&
outputs_mS$`PT_f`%in%c("60% protection")&
outputs_mS$variable%in%c('% Reduction in TB incidence','NNT with PT to avert one case'),],
aes(as.numeric(as.character(Incidence)),as.numeric(as.character(value)),colour=as.factor(Model),linetype=as.factor(Source)),size=1)+
facet_wrap(~variable,scales="free_y",switch="y")+
xlab("Incidence /100,000")+
ylab("")+
scale_colour_manual(name="Model",values=cbPalette)+
scale_fill_manual(name="Model",values=cbPalette)+
scale_linetype_manual(values = c("solid","dashed"),name="Parameters")+
theme_bw()+theme(legend.position = "bottom")+
coord_cartesian(xlim = c(50, 1000))+
# scale_y_continuous(expand = c(0, 0),limits = c(0,NA))+
scale_x_continuous(expand = c(0, 0))+
theme(strip.background = element_blank(),strip.placement = "outside")+
theme(plot.margin = unit(c(1,1,1,1), "cm"))+
guides(col = guide_legend(nrow = 1))+
guides(fill = FALSE)+
guides(linetype = guide_legend(nrow = 1))+
theme(text = element_text(size=18))
Figure_A4
Figure_A4 <- ggplot()+
geom_line(data=outputs_mS[outputs_mS$`Reinfection model`=="Yes"&
outputs_mS$`PT_f`%in%c("25% protection")&
outputs_mS$variable%in%c('% Reduction in TB incidence','NNT with PT to avert one case'),],
aes(as.numeric(as.character(Incidence)),as.numeric(as.character(value)),colour=as.factor(Model),linetype=as.factor(Source)),size=1)+
facet_wrap(~variable,scales="free_y",switch="y")+
xlab("Incidence /100,000")+
ylab("")+
scale_colour_manual(name="Model",values=cbPalette)+
scale_fill_manual(name="Model",values=cbPalette)+
scale_linetype_manual(values = c("solid","dashed"),name="Parameters")+
theme_bw()+theme(legend.position = "bottom")+
coord_cartesian(xlim = c(50, 1000))+
# scale_y_continuous(expand = c(0, 0),limits = c(0,NA))+
scale_x_continuous(expand = c(0, 0))+
theme(strip.background = element_blank(),strip.placement = "outside")+
theme(plot.margin = unit(c(1,1,1,1), "cm"))+
guides(col = guide_legend(nrow = 1))+
guides(fill = FALSE)+
guides(linetype = guide_legend(nrow = 1))+
theme(text = element_text(size=18))
Figure_A4
outputs_mS <- melt(outputs_newS[which(outputs_newS$Incidence<1200),],id.vars=c("Beta","Model","Source","Reinfection model","Incidence","Protection"))
outputs_mS$PT_f = factor(outputs_mS$Protection, levels=c('100% protection','60% protection','25% protection'))
Figure_A4 <- ggplot()+
geom_line(data=outputs_mS[outputs_mS$`Reinfection model`=="Yes"&
outputs_mS$variable%in%c('% Reduction in TB incidence'),],
aes(as.numeric(as.character(Incidence)),as.numeric(as.character(value)),colour=as.factor(Model),linetype=as.factor(Source)),size=1)+
facet_wrap(~outputs_mS$PT_f,scales="free_y",switch="y")+
xlab("Incidence /100,000")+
ylab("")+
scale_colour_manual(name="Model",values=cbPalette)+
scale_fill_manual(name="Model",values=cbPalette)+
scale_linetype_manual(values = c("solid","dashed"),name="Parameters")+
theme_bw()+theme(legend.position = "bottom")+
coord_cartesian(xlim = c(50, 1000))+
# scale_y_continuous(expand = c(0, 0),limits = c(0,NA))+
scale_x_continuous(expand = c(0, 0))+
theme(strip.background = element_blank(),strip.placement = "outside")+
theme(plot.margin = unit(c(1,1,1,1), "cm"))+
guides(col = guide_legend(nrow = 1))+
guides(fill = FALSE)+
guides(linetype = guide_legend(nrow = 1))+
theme(text = element_text(size=18))
Figure_A4
outputs_mS[outputs_mS$`Reinfection model`=="Yes"&
outputs_mS$variable%in%c('% Reduction in TB incidence'),]
outputs_mS <- melt(outputs_newS[which(outputs_newS$Incidence<1200),],id.vars=c("Beta","Model","Source","Reinfection model","Incidence","Protection"))
outputs_mS$PT_f = factor(outputs_mS$Protection, levels=c('100% protection','60% protection','25% protection'))
Figure_A4 <- ggplot()+
geom_line(data=outputs_mS[outputs_mS$`Reinfection model`=="Yes"&
outputs_mS$variable%in%c('% Reduction in TB incidence'),],
aes(as.numeric(as.character(Incidence)),as.numeric(as.character(value)),colour=as.factor(Model),linetype=as.factor(Source)),size=1)+
facet_wrap(~outputs_mS$PT_f,scales="free_y",switch="y")+
xlab("Incidence /100,000")+
ylab("")+
scale_colour_manual(name="Model",values=cbPalette)+
scale_fill_manual(name="Model",values=cbPalette)+
scale_linetype_manual(values = c("solid","dashed"),name="Parameters")+
theme_bw()+theme(legend.position = "bottom")+
coord_cartesian(xlim = c(50, 1000))+
# scale_y_continuous(expand = c(0, 0),limits = c(0,NA))+
scale_x_continuous(expand = c(0, 0))+
theme(strip.background = element_blank(),strip.placement = "outside")+
theme(plot.margin = unit(c(1,1,1,1), "cm"))+
guides(col = guide_legend(nrow = 1))+
guides(fill = FALSE)+
guides(linetype = guide_legend(nrow = 1))+
theme(text = element_text(size=18))
Figure_A4
outputs_mS <- melt(outputs_newS[which(outputs_newS$Incidence<1200),],id.vars=c("Beta","Model","Source","Reinfection model","Incidence","Protection"))
outputs_mS$PT_f = factor(outputs_mS$Protection, levels=c('100% protection','60% protection','25% protection'))
Figure_A4 <- ggplot()+
geom_line(data=outputs_mS[outputs_mS$`Reinfection model`=="Yes"&
outputs_mS$variable%in%c('% Reduction in TB incidence'),],
aes(as.numeric(as.character(Incidence)),as.numeric(as.character(value)),colour=as.factor(Model),linetype=as.factor(Source)),size=1)+
facet_wrap(~PT_f,scales="free_y",switch="y")+
xlab("Incidence /100,000")+
ylab("")+
scale_colour_manual(name="Model",values=cbPalette)+
scale_fill_manual(name="Model",values=cbPalette)+
scale_linetype_manual(values = c("solid","dashed"),name="Parameters")+
theme_bw()+theme(legend.position = "bottom")+
coord_cartesian(xlim = c(50, 1000))+
# scale_y_continuous(expand = c(0, 0),limits = c(0,NA))+
scale_x_continuous(expand = c(0, 0))+
theme(strip.background = element_blank(),strip.placement = "outside")+
theme(plot.margin = unit(c(1,1,1,1), "cm"))+
guides(col = guide_legend(nrow = 1))+
guides(fill = FALSE)+
guides(linetype = guide_legend(nrow = 1))+
theme(text = element_text(size=18))
Figure_A4
Figure_A4 <- ggplot()+
geom_line(data=outputs_mS[outputs_mS$`Reinfection model`=="Yes"&
outputs_mS$variable%in%c('% Reduction in TB incidence'),],
aes(as.numeric(as.character(Incidence)),as.numeric(as.character(value)),colour=as.factor(Model),linetype=as.factor(Source)),size=1)+
facet_wrap(~PT_f,scales="fixed",switch="y")+
xlab("Incidence /100,000")+
ylab("")+
scale_colour_manual(name="Model",values=cbPalette)+
scale_fill_manual(name="Model",values=cbPalette)+
scale_linetype_manual(values = c("solid","dashed"),name="Parameters")+
theme_bw()+theme(legend.position = "bottom")+
coord_cartesian(xlim = c(50, 1000))+
# scale_y_continuous(expand = c(0, 0),limits = c(0,NA))+
scale_x_continuous(expand = c(0, 0))+
theme(strip.background = element_blank(),strip.placement = "outside")+
theme(plot.margin = unit(c(1,1,1,1), "cm"))+
guides(col = guide_legend(nrow = 1))+
guides(fill = FALSE)+
guides(linetype = guide_legend(nrow = 1))+
theme(text = element_text(size=18))
Figure_A4
range_by_model
range_by_model[range_by_model$variable%in%c('% Reduction in TB incidence'),]
range_by_model[range_by_model$variable%in%c('% Reduction in TB incidence')&range_by_model$Incidence=="250",]
range_by_model[range_by_model$variable%in%c('% Reduction in TB incidence')&range_by_model$Incidence%in%c("250","500","750,"10000")&range_model$Protection%in%c("60% Protection"),]
range_by_model[range_by_model$variable%in%c('% Reduction in TB incidence')&range_by_model$Incidence%in%c("250","500","750,"1000)&range_model$Protection%in%c("60% Protection"),]
range_by_model[range_by_model$variable%in%c('% Reduction in TB incidence')&
range_by_model$Incidence%in%c("250","500","750","1000")
&range_model$Protection%in%c("60% Protection"),]
range_by_model[range_by_model$variable%in%c('% Reduction in TB incidence')&
range_by_model$Incidence%in%c("250","500","750","1000")
&range_by_model$Protection%in%c("60% Protection"),]
range_by_model[range_by_model$variable%in%c('% Reduction in TB incidence')&
range_by_model$Incidence%in%c("250","500","750","1000")
&range_by_model$Protection%in%c("60% protection"),]
range_by_model[range_by_model$variable%in%c('% Reduction in TB incidence')&
range_by_model$Incidence%in%c("250","500","750","1000")
&range_by_model$Protection%in%c("60% protection")&
range_by_model$Reinfection=="Yes",]
range_by_model[range_by_model$variable%in%c('% Reduction in TB incidence')&
range_by_model$Incidence%in%c("250","500","750","1000")
&range_by_model$Protection%in%c("60% protection")&
range_by_model$Reinfection=="Yes"&
range_by_model$Model%in%c(1,2),]
# This code is used to produce the results in "Sumner and White, Modelling the impact of tuberculosis preventive therapy: the importance of model structure"
# It compares the use of different structures for the progression from latecy to disease and the impact on the predicted effect of a simple preventive therapy intervention
# Set the working directory
setwd("~/GitHub/Latency_Model_Comparison_Public")
# load libraries
require(deSolve)
require(ggplot2)
require(reshape2)
require(stats)
library(FME)
# load the different models
# these calculate the cumulative TB incidence (ignoring death and re-infection)
source("Model_1_cum.R")
source("Model_2_cum.R")
source("Model_3_cum.R")
# these are the transmission models
source("Model_1.R")
source("Model_2.R")
source("Model_3.R")
# Set up accessible palette for plotting
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
##############################################################################################################################################
# This script implements the analysis of the cumulaitve TB risk reported in the appendix
source("Cumulative_incidence_analysis.R")
##############################################################################################################################################
# This script implements the analysis of the steady state incidence and intervention affects reported in the main text
source("Intervention_analysis.R")
Figure_A1
Figure_A2
Figure_A3
Figure_2
Figure_3
source("Model_3_reparameterise.R")
Figure_A4
